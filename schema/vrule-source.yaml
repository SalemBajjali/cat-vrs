$schema: "http://json-schema.org/draft/2020-12/schema"
title: "GA4GH-Variation-Rule-Definitions"
type: object
namespaces:
  vrs: "https://raw.githubusercontent.com/ga4gh/vrs/1.2.0/schema/vrs.json#/definitions/"

$defs:
  # VRSATILE Variaton Rules are presented top-down. Everything rolls up to VariationRule,
  # which is a polymorphic abstraction of many kinds of variation rule.

  # =============================================================================
  # Top-level Variation Rule concepts
  # =============================================================================

  VariationRule:
    description: >-
      The abstract *Variation Rule* parent class. All attributes of this parent
      class are inherited by Variation Rule descendent classes.
    oneOf:
      - $ref: "#/$defs/SimpleVariationRule"
      - $ref: "#/$defs/ComplexVariationRule"
    heritable_properties:
      _id:
        type: string
        description: >-
          A GA4GH computed identifier.
      type:
        type: string
        description: >-
          MUST be Variation Rule class name.
      complement:
        type: bool
        description: >-
          This field indicates whether the variation rule is defined to include (false)
          or exclude (true) variation concepts matching the rule. This is equivalent to
          a logical NOT operation on the variation rule expression.
    heritable_required: ['type', 'complement']

  SimpleVariationRule:
    description: >-
      The SimpleVariationRule abstract class represents the set of :ref:`VariationRule` classes
      that are used directly by genomic knowledge statements, or as components for defining
      a :ref:`ComplexVariationRule`.
    oneOf:
      - $ref: "#/$defs/LocatedMolecularConsequenceRule"
      - $ref: "#/$defs/EquivalentVariationRule"
      - $ref: "#/$defs/GeneFunctionalConsequenceRule"

  ComplexVariationRule:
    description: >-
      The ComplexVariationRule class constructs objects for defining complex logical
      relationships between two or more other :ref:`VariationRule` objects.
    properties:
      type:
        type: string
        description: >-
          MUST be "ComplexVariationRule".
        enum: ["ComplexVariationRule"]
      operands:
        type: array
        items:
          $ref: "#/$defs/VariationRule"
        minItems: 2
        description: >-
          The :ref:`VariationRule` objects that are being evaluated collectively.
      operator:
        type: string
        enum: ["AND", "OR"]
        description: >-
          The logical operation applied to evaluating the object *operands*.
    required: ["operands", "operator"]

  # =============================================================================
  # Simple Variation Rules
  # =============================================================================

  LocatedMolecularConsequenceRule:
    description: >-
      The LocatedMolecularConsequenceRule class constructs objects which describe
      any variation that results in the *molecular_consequence* at the specified
      *location*.
    properties:
      type:
        type: string
        enum: ["LocatedMolecularConsequenceRule"]
        description: >-
          MUST be "LocatedMolecularConsequenceRule"
      location:
        $ref_curie: "vrs:Location"
        description: >-
          The location where the *molecular_consequence* is observed.
      molecular_consequence:
        $ref_curie: "vrs:CURIE"
        description: >-
          A sequence ontology term specifying the type of molecular consequence.
          The value SHOULD be a descendent term of
          `SO:0001537 (structural_variant) <http://www.sequenceontology.org/browser/current_release/term/SO:0001537>`_.
      molecular_context:
        type: string
        enum: ["genomic", "transcript", "protein"]
        description: >-
          The molecular context of the *location* value.
    required: ["type", "location", "molecular_consequence", "molecular_context"]

  EquivalentVariationRule:
    description: >-
      The EquivalentVariationRule class constructs objects which describe
      any variation that can be "equivalently mapped" to the indicated *variation*
      value. The rules by which equivalency mapping is determined are managed at
      the implementation level, but typically involve operations such as variation
      projection (e.g. genomic <-> transcript <-> protein) and translation
      (e.g. GRCh37 genomic <-> GRCh38 genomic).
    properties:
      type:
        type: string
        enum: ["EquivalentVariationRule"]
        description: >-
          MUST be "EquivalentVariationRule".
      variation:
        $ref_curie: "vrs:Variation"
        description: >-
          The `VRS Variation <https://vrs.ga4gh.org/en/1.2.0/terms_and_model.html#variation>`_
          object to which equivalency must be determined.
      molecular_context:
        type: string
        enum: ["genomic", "transcript", "protein"]
        description: >-
          The molecular context of the *variation* value.
    required: ["type", "variation", "molecular_context"]

  GeneFunctionalConsequenceRule:
    description: >-
      A thing!